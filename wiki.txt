1. pip install django - установка django
2. django-admin startproject + name - создаем проект
3. в settings.py в ROOT_URLCONF = прописать 'name.urls'
4. в settings.py в TEMPLATES = -> 'DIRS': ['templates'],
5. cd + root folder - переходим в папку проекта
6. py manage.py runserver - запуск сервера

Подключение страниц:
1. views.py - создаем файл в котором содержатся функции со ссылками на HTML страницы
    def home(request):
        return render(request, 'home.html')
2. HTML страницы храним в папке templates
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Main</title>
        </head>
        <body>
            <h1>Home Page</h1>
        </body>
        </html>
3. Прописываем путь в urls.py:
    from . import views
    path('', views.home)

GIT Local
git --version - проверка версии git
git init - инициализировать git
git status - посмотреть что не отслеживается в git
git add . - добавить всё в отслеживание git
git commit -m "commit" - закоммитим все изменения

GITHub
1. Создать репозиторий на git hub
2. Выполнить всё из …or push an existing repository from the command line:
    - git remote add origin https://github.com/SergeiSMV/Second.git
    - git branch -M main (or master)
    - git push -u origin main (or master)
3. git push - последующие выгрузки


Приложения
py manage.py startapp + name - создание приложения


Миграции
1. py manage.py migrate - принятие миграций приложений по умолчанию
2. в settings.py прописать новые приложения в INSTALLED_APPS:
    пример: 'events.apps.EventsConfig',
    где: events - имя приложения
         apps - означает, что это приложение
         EventsConfig - имя класса из /migrations/apps.py
3. создаюм путь для сохранения изображений (проект 2, урок 5, 14:00)
4. установить Pillow для работы с изображениями
5. создаем миграции для новых моделей py manage.py makemigrations
6. принять миграции py manage.py migrate

после публикации проекта, параметр Debug изменить на False!!!